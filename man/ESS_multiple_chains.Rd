% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SamplerCpp.R
\name{ESS_multiple_chains}
\alias{ESS_multiple_chains}
\title{Compute Effective Sample Size (ESS) for Multiple MCMC Chains}
\usage{
ESS_multiple_chains(chains, max_lag = 1000)
}
\arguments{
\item{chains}{A numeric matrix (columns = chains) or list of numeric vectors 
containing MCMC samples. All chains must have equal length.}

\item{max_lag}{Maximum lag to consider for autocorrelation calculations 
(default = 1000). Use smaller values for faster computation.}
}
\value{
A list with components:
\itemize{
  \item \code{ESS} - Effective Sample Size estimate
  \item \code{used_lags} - Number of lags used in the calculation
}
}
\description{
Calculates the Effective Sample Size (ESS) for a parameter across multiple 
Markov Chain Monte Carlo (MCMC) chains using autocorrelation-based estimation.
Handles both matrix and list inputs.
}
\details{
The function implements the following steps:
1. Input conversion: Matrix columns → list elements if needed
2. Autocorrelation function (ACF) calculation for each chain
3. Chain-averaged ACF computation
4. Geyer's initial positive sequence truncation
5. ESS calculation using truncated autocorrelation sum
}
\note{
Key requirements:
- All chains must have identical lengths
- Remove burn-in periods before calculation
- Minimum recommended ESS: 100-200 for reliable inference
- Computation time grows with max_lag (O(n_chains × chain_length × max_lag))
}
\section{Methodological Notes}{

- Matrix input is more memory-efficient for large numbers of chains
- Chains should be pre-processed (burn-in removed, convergence verified)
- Returns conservative estimate by stopping at first negative ACF pair sum
- Formula: ESS = (n_chains × n_samples) / [1 + 2Σ(autocorrelations)]
}

\references{
Geyer, C.J. (1992). Practical Markov Chain Monte Carlo. Statistical Science.
}
\seealso{
For convergence diagnostics:
- \code{coda::gelman.diag} for R-hat statistics
- \code{posterior::ess_bulk} for alternative ESS implementations
}
